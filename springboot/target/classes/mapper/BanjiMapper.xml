<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.BanjiMapper">

    <!-- 定义一个基础的列列表，供多个查询语句复用 -->
    <sql id="Base_Column_List">
        id, name, neirong, teacher_id, speciality_id
    </sql>

    <!-- 查询所有班级的记录，支持动态筛选条件 -->
    <select id="selectAll" resultType="com.example.entity.Banji">
        <!-- 从班级表(banji)中选择所有列，同时关联教师和专业的名称 -->
        select banji.*,
        laoshi.name as jiaoshimingcheng,  <!-- 教师的名称 -->
        speciality.name as specialitymingcheng  <!-- 专业的名称 -->
        from banji
        left join laoshi on banji.teacher_id = laoshi.id  <!-- 根据教师ID进行左连接 -->
        left join speciality on banji.speciality_id = speciality.id  <!-- 根据专业ID进行左连接 -->

        <where>
            <!-- 动态生成查询条件：根据id查询 -->
            <choose>
                <when test="id != null"> and id = #{id}</when>
                <otherwise></otherwise>
            </choose>
            <!-- 根据班级名称进行模糊查询 -->
            <choose>
                <when test="name != null"> and banji.name like concat('%', #{name}, '%')</when>
                <otherwise></otherwise>
            </choose>
        </where>

        <!-- 按照id降序排列查询结果 -->
        order by id desc
    </select>

    <!-- 根据班级ID查询班级信息 -->
    <select id="selectById" resultType="com.example.entity.Banji">
        <!-- 查询指定ID的班级记录，使用Base_Column_List来复用列定义 -->
        select
        <include refid="Base_Column_List" />
        from banji
        where id = #{id}  <!-- 按照班级ID查询 -->
    </select>

    <!-- 根据班级ID删除班级记录 -->
    <delete id="deleteById">
        <!-- 删除指定ID的班级记录 -->
        delete from banji
        where id = #{id}  <!-- 根据ID删除 -->
    </delete>

    <!-- 插入新的班级记录，动态生成插入字段 -->
    <insert id="insert" parameterType="com.example.entity.Banji" useGeneratedKeys="true">
        <!-- 动态插入字段，避免插入null值字段 -->
        insert into banji
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <!-- 动态判断字段是否为空，只有不为空的字段才会被插入 -->
            <choose>
                <when test="id != null">id,</when>
                <otherwise></otherwise>
            </choose>
            <choose>
                <when test="name != null">name,</when>
                <otherwise></otherwise>
            </choose>
            <choose>
                <when test="neirong != null">neirong,</when>
                <otherwise></otherwise>
            </choose>
            <choose>
                <when test="teacherId != null">teacher_id,</when>
                <otherwise></otherwise>
            </choose>
            <choose>
                <when test="specialityId != null">speciality_id,</when>
                <otherwise></otherwise>
            </choose>
        </trim>

        <!-- 动态插入字段的值 -->
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <choose>
                <when test="id != null">#{id},</when>
                <otherwise></otherwise>
            </choose>
            <choose>
                <when test="name != null">#{name},</when>
                <otherwise></otherwise>
            </choose>
            <choose>
                <when test="neirong != null">#{neirong},</when>
                <otherwise></otherwise>
            </choose>
            <choose>
                <when test="teacherId != null">#{teacherId},</when>
                <otherwise></otherwise>
            </choose>
            <choose>
                <when test="specialityId != null">#{specialityId},</when>
                <otherwise></otherwise>
            </choose>
        </trim>
    </insert>

    <!-- 根据ID更新班级记录，支持动态更新不同字段 -->
    <update id="updateById" parameterType="com.example.entity.Banji">
        update banji
        <set>
            <!-- 动态生成更新字段，只有非空的字段才会更新 -->
            <choose>
                <when test="name != null">
                    name = #{name},
                </when>
                <otherwise></otherwise>
            </choose>
            <choose>
                <when test="neirong != null">
                    neirong = #{neirong},
                </when>
                <otherwise></otherwise>
            </choose>
            <choose>
                <when test="specialityId != null">
                    speciality_id = #{specialityId},
                </when>
                <otherwise></otherwise>
            </choose>
            <choose>
                <when test="teacherId != null">
                    teacher_id = #{teacherId},
                </when>
                <otherwise></otherwise>
            </choose>
        </set>
        where id = #{id}  <!-- 根据ID进行定位更新 -->
    </update>

</mapper>
