{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nimport axios from \"axios\";\nimport { Bell, Calendar, Search } from \"@element-plus/icons-vue\";\nexport default {\n  __name: 'Home',\n  setup(__props) {\n    const searchText = ref(\"\");\n    const semester = ref(\"2024-2025-1\");\n    const courseType = ref(\"all\");\n    const weekDays = [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"];\n    const scheduleItems = [{\n      period: \"第一大节\",\n      time: \"(01/02小节)\",\n      timeRange: \"08:00~09:45\"\n    }, {\n      period: \"第二大节\",\n      time: \"(03/04小节)\",\n      timeRange: \"09:55~11:35\"\n    }, {\n      period: \"第三大节\",\n      time: \"(05/06小节)\",\n      timeRange: \"13:30~15:05\"\n    }, {\n      period: \"第四大节\",\n      time: \"(07/08小节)\",\n      timeRange: \"15:20~16:55\"\n    }, {\n      period: \"第五大节\",\n      time: \"(09/10小节)\",\n      timeRange: \"17:10~18:45\"\n    }];\n\n    // 定义一个响应式变量来存储用户头像URL\n    const userAvatar = ref(\"\");\n\n    // 获取用户信息的方法\n    const fetchUserInfo = async () => {\n      try {\n        const response = await axios.get(\"/api/user/profile\"); // 替换为实际的API端点\n        // 假设后端返回的数据格式如下：\n        // {\n        //   \"name\": \"姓名\",\n        //   \"avatarUrl\": \"https://example.com/path-to-avatar.jpg\"\n        // }\n        userAvatar.value = response.data.avatarUrl;\n      } catch (error) {\n        console.error(\"获取用户信息失败:\", error);\n        // 设置一个默认头像或处理错误\n        userAvatar.value = \"\"; // 可以设置为默认图片的URL\n      }\n    };\n\n    // 在组件挂载时调用获取用户信息的方法\n    onMounted(() => {\n      fetchUserInfo();\n    });\n    return {\n      __sfc: true,\n      searchText,\n      semester,\n      courseType,\n      weekDays,\n      scheduleItems,\n      userAvatar,\n      fetchUserInfo\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","Bell","Calendar","Search","searchText","semester","courseType","weekDays","scheduleItems","period","time","timeRange","userAvatar","fetchUserInfo","response","get","value","data","avatarUrl","error","console"],"sources":["Home.vue"],"sourcesContent":["<template>\r\n  <el-container>\r\n    <!-- 主要内容区 -->\r\n    <el-main>\r\n      <el-card>\r\n        <template #header>\r\n          <el-row justify=\"space-between\" align=\"middle\">\r\n            <el-col :span=\"12\">\r\n              <el-space>\r\n                <h2>我的课表</h2>\r\n                <el-select v-model=\"semester\" placeholder=\"学期\">\r\n                  <el-option label=\"2024-2025-1\" value=\"2024-2025-1\" />\r\n                </el-select>\r\n                <el-select v-model=\"courseType\" placeholder=\"类型\">\r\n                  <el-option label=\"全部\" value=\"all\" />\r\n                </el-select>\r\n              </el-space>\r\n            </el-col>\r\n            <el-col :span=\"12\" class=\"flex-center justify-end\">\r\n              <el-tag>必修</el-tag>\r\n              <el-tag type=\"info\">选修</el-tag>\r\n              <el-tag type=\"warning\">任选</el-tag>\r\n            </el-col>\r\n          </el-row>\r\n        </template>\r\n\r\n        <!-- 课程表格 -->\r\n        <el-table :data=\"scheduleItems\" border>\r\n          <el-table-column prop=\"period\" label=\"节次\" width=\"120\" />\r\n          <el-table-column v-for=\"day in weekDays\" :key=\"day\" :label=\"day\">\r\n            <template #default>\r\n              <!-- 这里可以放置具体课程内容 -->\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-card>\r\n    </el-main>\r\n\r\n    <!-- 右侧边栏 -->\r\n    <el-aside width=\"250px\">\r\n      <el-card class=\"mb-4\">\r\n        <template #header>\r\n          <h3>学业进展</h3>\r\n        </template>\r\n        <div>\r\n          <span>课程得分: 65.5</span>\r\n          <el-progress :percentage=\"90.97\" />\r\n        </div>\r\n      </el-card>\r\n\r\n      <el-card>\r\n        <template #header>\r\n          <h3>通知</h3>\r\n        </template>\r\n        <el-tabs>\r\n          <el-tab-pane label=\"通知\">通知内容</el-tab-pane>\r\n          <el-tab-pane label=\"公告\">公告内容</el-tab-pane>\r\n          <el-tab-pane label=\"待办消息\">待办内容</el-tab-pane>\r\n        </el-tabs>\r\n      </el-card>\r\n    </el-aside>\r\n  </el-container>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { Bell, Calendar, Search } from \"@element-plus/icons-vue\";\r\n\r\nconst searchText = ref(\"\");\r\nconst semester = ref(\"2024-2025-1\");\r\nconst courseType = ref(\"all\");\r\n\r\nconst weekDays = [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"];\r\n\r\nconst scheduleItems = [\r\n  { period: \"第一大节\", time: \"(01/02小节)\", timeRange: \"08:00~09:45\" },\r\n  { period: \"第二大节\", time: \"(03/04小节)\", timeRange: \"09:55~11:35\" },\r\n  { period: \"第三大节\", time: \"(05/06小节)\", timeRange: \"13:30~15:05\" },\r\n  { period: \"第四大节\", time: \"(07/08小节)\", timeRange: \"15:20~16:55\" },\r\n  { period: \"第五大节\", time: \"(09/10小节)\", timeRange: \"17:10~18:45\" },\r\n];\r\n\r\n// 定义一个响应式变量来存储用户头像URL\r\nconst userAvatar = ref(\"\");\r\n\r\n// 获取用户信息的方法\r\nconst fetchUserInfo = async () => {\r\n  try {\r\n    const response = await axios.get(\"/api/user/profile\"); // 替换为实际的API端点\r\n    // 假设后端返回的数据格式如下：\r\n    // {\r\n    //   \"name\": \"姓名\",\r\n    //   \"avatarUrl\": \"https://example.com/path-to-avatar.jpg\"\r\n    // }\r\n    userAvatar.value = response.data.avatarUrl;\r\n  } catch (error) {\r\n    console.error(\"获取用户信息失败:\", error);\r\n    // 设置一个默认头像或处理错误\r\n    userAvatar.value = \"\"; // 可以设置为默认图片的URL\r\n  }\r\n};\r\n\r\n// 在组件挂载时调用获取用户信息的方法\r\nonMounted(() => {\r\n  fetchUserInfo();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.bg-primary {\r\n  background-color: #409eff;\r\n}\r\n\r\n.header {\r\n  height: 80px; /* 设置头部高度 */\r\n}\r\n\r\n.full-height {\r\n  height: 100%;\r\n}\r\n\r\n.flex-center {\r\n  display: flex;\r\n  align-items: center; /* 垂直居中 */\r\n}\r\n\r\n.justify-end {\r\n  justify-content: flex-end; /* 右对齐 */\r\n}\r\n\r\n.no-margin {\r\n  margin: 0;\r\n}\r\n</style>\r\n"],"mappings":"AAiEA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,yBAAyB;;;;IAEhE,MAAMC,UAAU,GAAGN,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMO,QAAQ,GAAGP,GAAG,CAAC,aAAa,CAAC;IACnC,MAAMQ,UAAU,GAAGR,GAAG,CAAC,KAAK,CAAC;IAE7B,MAAMS,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAE3D,MAAMC,aAAa,GAAG,CACpB;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE,WAAW;MAAEC,SAAS,EAAE;IAAc,CAAC,EAC/D;MAAEF,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE,WAAW;MAAEC,SAAS,EAAE;IAAc,CAAC,EAC/D;MAAEF,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE,WAAW;MAAEC,SAAS,EAAE;IAAc,CAAC,EAC/D;MAAEF,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE,WAAW;MAAEC,SAAS,EAAE;IAAc,CAAC,EAC/D;MAAEF,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE,WAAW;MAAEC,SAAS,EAAE;IAAc,CAAC,CAChE;;IAED;IACA,MAAMC,UAAU,GAAGd,GAAG,CAAC,EAAE,CAAC;;IAE1B;IACA,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACvD;QACA;QACA;QACA;QACA;QACAH,UAAU,CAACI,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACC,SAAS;MAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC;QACAP,UAAU,CAACI,KAAK,GAAG,EAAE,CAAC,CAAC;MACzB;IACF,CAAC;;IAED;IACAjB,SAAS,CAAC,MAAM;MACdc,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}