{"ast":null,"code":"export default {\n  name: \"StudentManagement\",\n  data() {\n    return {\n      courses: [],\n      // 所有课程的数据\n      selectedCourse: null,\n      // 当前选择的课程\n      students: [],\n      // 当前课程的学生数据\n      searchQuery: \"\",\n      // 搜索关键词\n      pageNum: 1,\n      // 当前页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      // 学生总数\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}') // 用户信息\n    };\n  },\n  created() {\n    this.loadCourses();\n  },\n  methods: {\n    // 加载课程列表\n    loadCourses() {\n      this.$request.get('/courses').then(res => {\n        if (res.code === '200') {\n          this.courses = res.data || [];\n        } else {\n          this.$message.error('加载课程列表失败');\n        }\n      });\n    },\n    // 选择课程\n    selectCourse(course) {\n      this.selectedCourse = course;\n      this.loadStudents(1);\n    },\n    // 返回课程列表\n    deselectCourse() {\n      this.selectedCourse = null;\n      this.searchQuery = \"\"; // 清空搜索\n    },\n    // 加载学生数据\n    loadStudents(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/students', {\n        params: {\n          courseId: this.selectedCourse.id,\n          // 当前课程ID\n          searchQuery: this.searchQuery,\n          // 搜索关键词\n          pageNum: this.pageNum,\n          pageSize: this.pageSize\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.students = res.data?.list || [];\n          this.total = res.data?.total || 0;\n        } else {\n          this.$message.error('加载学生数据失败');\n        }\n      });\n    },\n    // 分页处理\n    handleCurrentChange(pageNum) {\n      this.loadStudents(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","courses","selectedCourse","students","searchQuery","pageNum","pageSize","total","user","JSON","parse","localStorage","getItem","created","loadCourses","methods","$request","get","then","res","code","$message","error","selectCourse","course","loadStudents","deselectCourse","params","courseId","id","list","handleCurrentChange"],"sources":["src/views/teacher/Choice.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>学生成绩管理系统</h2>\r\n\r\n    <!-- 课程列表 -->\r\n    <div v-if=\"!selectedCourse\">\r\n      <h3>请选择课程</h3>\r\n      <ul class=\"course-list\">\r\n        <li\r\n            v-for=\"course in courses\"\r\n            :key=\"course.id\"\r\n            @click=\"selectCourse(course)\"\r\n            class=\"course-item\"\r\n        >\r\n          {{ course.name }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- 学生列表 -->\r\n    <div v-else>\r\n      <button @click=\"deselectCourse\" class=\"back-btn\">返回课程列表</button>\r\n\r\n      <h3>{{ selectedCourse.name }}</h3>\r\n      <div class=\"search-bar\">\r\n        <input\r\n            type=\"text\"\r\n            v-model=\"searchQuery\"\r\n            placeholder=\"输入学生姓名或学号搜索\"\r\n            @input=\"loadStudents\"\r\n        />\r\n      </div>\r\n      <table>\r\n        <thead>\r\n        <tr>\r\n          <th>学号</th>\r\n          <th>姓名</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr\r\n            v-for=\"student in filteredStudents\"\r\n            :key=\"student.id\"\r\n        >\r\n          <td>{{ student.id }}</td>\r\n          <td>{{ student.name }}</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <!-- 分页 -->\r\n      <el-pagination\r\n          :current-page=\"pageNum\"\r\n          :page-size=\"pageSize\"\r\n          :total=\"total\"\r\n          @current-change=\"handleCurrentChange\"\r\n          layout=\"prev, pager, next, jumper\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"StudentManagement\",\r\n  data() {\r\n    return {\r\n      courses: [],  // 所有课程的数据\r\n      selectedCourse: null, // 当前选择的课程\r\n      students: [],  // 当前课程的学生数据\r\n      searchQuery: \"\", // 搜索关键词\r\n      pageNum: 1, // 当前页码\r\n      pageSize: 10, // 每页显示的个数\r\n      total: 0, // 学生总数\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'), // 用户信息\r\n    };\r\n  },\r\n  created() {\r\n    this.loadCourses();\r\n  },\r\n  methods: {\r\n    // 加载课程列表\r\n    loadCourses() {\r\n      this.$request.get('/courses').then(res => {\r\n        if (res.code === '200') {\r\n          this.courses = res.data || [];\r\n        } else {\r\n          this.$message.error('加载课程列表失败');\r\n        }\r\n      });\r\n    },\r\n\r\n    // 选择课程\r\n    selectCourse(course) {\r\n      this.selectedCourse = course;\r\n      this.loadStudents(1);\r\n    },\r\n\r\n    // 返回课程列表\r\n    deselectCourse() {\r\n      this.selectedCourse = null;\r\n      this.searchQuery = \"\"; // 清空搜索\r\n    },\r\n\r\n    // 加载学生数据\r\n    loadStudents(pageNum) {\r\n      if (pageNum) this.pageNum = pageNum;\r\n\r\n      this.$request.get('/students', {\r\n        params: {\r\n          courseId: this.selectedCourse.id,  // 当前课程ID\r\n          searchQuery: this.searchQuery, // 搜索关键词\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.students = res.data?.list || [];\r\n          this.total = res.data?.total || 0;\r\n        } else {\r\n          this.$message.error('加载学生数据失败');\r\n        }\r\n      });\r\n    },\r\n\r\n    // 分页处理\r\n    handleCurrentChange(pageNum) {\r\n      this.loadStudents(pageNum);\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.course-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.course-item {\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  margin: 5px;\r\n}\r\n\r\n.course-item:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.back-btn {\r\n  margin: 10px 0;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\ntable th, table td {\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  text-align: left;\r\n}\r\n\r\ntable th {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.search-bar input {\r\n  padding: 8px;\r\n  width: 100%;\r\n  max-width: 300px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"],"mappings":"AA+DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MAAA;MACAC,cAAA;MAAA;MACAC,QAAA;MAAA;MACAC,WAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACA;IACAD,YAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,aAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAnB,OAAA,GAAAkB,GAAA,CAAAnB,IAAA;QACA;UACA,KAAAqB,QAAA,CAAAC,KAAA;QACA;MACA;IACA;IAEA;IACAC,aAAAC,MAAA;MACA,KAAAtB,cAAA,GAAAsB,MAAA;MACA,KAAAC,YAAA;IACA;IAEA;IACAC,eAAA;MACA,KAAAxB,cAAA;MACA,KAAAE,WAAA;IACA;IAEA;IACAqB,aAAApB,OAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MAEA,KAAAW,QAAA,CAAAC,GAAA;QACAU,MAAA;UACAC,QAAA,OAAA1B,cAAA,CAAA2B,EAAA;UAAA;UACAzB,WAAA,OAAAA,WAAA;UAAA;UACAC,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA;QACA;MACA,GAAAY,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAjB,QAAA,GAAAgB,GAAA,CAAAnB,IAAA,EAAA8B,IAAA;UACA,KAAAvB,KAAA,GAAAY,GAAA,CAAAnB,IAAA,EAAAO,KAAA;QACA;UACA,KAAAc,QAAA,CAAAC,KAAA;QACA;MACA;IACA;IAEA;IACAS,oBAAA1B,OAAA;MACA,KAAAoB,YAAA,CAAApB,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}