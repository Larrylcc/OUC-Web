{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  name: \"AdminPerson\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入电话',\n          trigger: 'blur'\n        }, {\n          pattern: /^1[3-9]\\d{9}$/,\n          message: '请输入有效的手机号码',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '请输入有效的邮箱地址',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    handleAvatarSuccess(response, file) {\n      this.user.avatar = URL.createObjectURL(file.raw);\n    },\n    beforeAvatarUpload(file) {\n      const isImage = file.type.startsWith('image/');\n      if (!isImage) {\n        this.$message.error('上传头像只能是图片格式!');\n      }\n      return isImage;\n    },\n    submitForm() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          // Form submission logic here\n          console.log(\"Form Submitted\", this.user);\n        } else {\n          console.log('error submit!');\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","phone","pattern","email","type","methods","handleAvatarSuccess","response","file","avatar","URL","createObjectURL","raw","beforeAvatarUpload","isImage","startsWith","$message","error","submitForm","$refs","form","validate","valid","console","log"],"sources":["src/views/admin/AdminPerson.vue"],"sourcesContent":["<template>\r\n  <div class=\"form-container\">\r\n    <el-card class=\"user-card\" :body-style=\"{ padding: '20px' }\">\r\n      <el-form :model=\"user\" label-width=\"100px\" class=\"user-form\" ref=\"form\" :rules=\"rules\">\r\n        <div class=\"avatar-section\">\r\n          <el-upload\r\n              class=\"avatar-uploader\"\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :show-file-list=\"false\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n              :before-upload=\"beforeAvatarUpload\"\r\n          >\r\n            <img v-if=\"user.avatar\" :src=\"user.avatar\" class=\"avatar\" />\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n          </el-upload>\r\n        </div>\r\n\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"user.username\" placeholder=\"用户名\" disabled></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-input v-model=\"user.name\" placeholder=\"请输入姓名\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"电话\" prop=\"phone\">\r\n          <el-input v-model=\"user.phone\" placeholder=\"请输入电话\" type=\"tel\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"user.email\" placeholder=\"请输入邮箱\" type=\"email\"></el-input>\r\n        </el-form-item>\r\n\r\n        <div class=\"form-footer\">\r\n          <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"AdminPerson\",\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入姓名', trigger: 'blur' },\r\n        ],\r\n        phone: [\r\n          { required: true, message: '请输入电话', trigger: 'blur' },\r\n          { pattern: /^1[3-9]\\d{9}$/, message: '请输入有效的手机号码', trigger: 'blur' }\r\n        ],\r\n        email: [\r\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n          { type: 'email', message: '请输入有效的邮箱地址', trigger: 'blur' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    handleAvatarSuccess(response, file) {\r\n      this.user.avatar = URL.createObjectURL(file.raw);\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const isImage = file.type.startsWith('image/');\r\n      if (!isImage) {\r\n        this.$message.error('上传头像只能是图片格式!');\r\n      }\r\n      return isImage;\r\n    },\r\n    submitForm() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          // Form submission logic here\r\n          console.log(\"Form Submitted\", this.user);\r\n        } else {\r\n          console.log('error submit!');\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 30px;\r\n}\r\n\r\n.user-card {\r\n  width: 60%;\r\n  max-width: 800px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.user-form {\r\n  padding: 10px;\r\n}\r\n\r\n.avatar-section {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.avatar-uploader {\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  width: 120px;\r\n  height: 120px;\r\n  line-height: 120px;\r\n  background-color: #f0f2f5;\r\n}\r\n\r\n.avatar {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 40px;\r\n  color: #bdbdbd;\r\n}\r\n\r\n.form-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 20px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .user-card {\r\n    width: 90%;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;AA0CA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAP,IAAA,GACA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,KAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAE,OAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAG,KAAA,GACA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAI,IAAA;UAAAL,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAK,OAAA;IACAC,oBAAAC,QAAA,EAAAC,IAAA;MACA,KAAAhB,IAAA,CAAAiB,MAAA,GAAAC,GAAA,CAAAC,eAAA,CAAAH,IAAA,CAAAI,GAAA;IACA;IACAC,mBAAAL,IAAA;MACA,MAAAM,OAAA,GAAAN,IAAA,CAAAJ,IAAA,CAAAW,UAAA;MACA,KAAAD,OAAA;QACA,KAAAE,QAAA,CAAAC,KAAA;MACA;MACA,OAAAH,OAAA;IACA;IACAI,WAAA;MACA,KAAAC,KAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACAC,OAAA,CAAAC,GAAA,wBAAAhC,IAAA;QACA;UACA+B,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}