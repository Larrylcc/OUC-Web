{"ast":null,"code":"export default {\n  name: \"StudentMessage\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      colleges: [],\n      specialities: [],\n      classes: []\n    };\n  },\n  created() {\n    this.fetchNames(); // 获取学院、专业和班级名称\n  },\n  methods: {\n    async fetchNames() {\n      // 假设你有 API 能够通过 ID 获取对应名称\n      try {\n        // 通过 user.college_id 获取学院名称\n        const collegeResponse = await this.$axios.get(`/api/colleges/${this.user.college_id}`);\n        this.user.collegeName = collegeResponse.data.name;\n\n        // 通过 user.speciality_id 获取专业名称\n        const specialityResponse = await this.$axios.get(`/api/specialities/${this.user.speciality_id}`);\n        this.user.specialityName = specialityResponse.data.name;\n\n        // 通过 user.class_id 获取班级名称\n        const classResponse = await this.$axios.get(`/api/classes/${this.user.class_id}`);\n        this.user.className = classResponse.data.name;\n      } catch (error) {\n        console.error('Error fetching names:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","colleges","specialities","classes","created","fetchNames","methods","collegeResponse","$axios","get","college_id","collegeName","specialityResponse","speciality_id","specialityName","classResponse","class_id","className","error","console"],"sources":["src/views/student/StudentMassage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card style=\"width: 50%\">\r\n      <el-form :model=\"user\" label-width=\"100px\" style=\"padding-right: 50px\">\r\n        <div style=\"margin: 15px; text-align: center\">\r\n          <img v-if=\"user.avatar\" :src=\"user.avatar\" class=\"avatar\" />\r\n          <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n        </div>\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"user.username\" placeholder=\"用户名\" ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-input v-model=\"user.name\" placeholder=\"姓名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"学院\" prop=\"collegeName\">\r\n          <el-input v-model=\"user.collegeName\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"专业\" prop=\"specialityName\">\r\n          <el-input v-model=\"user.specialityName\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"班级\" prop=\"className\">\r\n          <el-input v-model=\"user.className\" disabled></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"StudentMessage\",\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      colleges: [],\r\n      specialities: [],\r\n      classes: [],\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchNames(); // 获取学院、专业和班级名称\r\n  },\r\n  methods: {\r\n    async fetchNames() {\r\n      // 假设你有 API 能够通过 ID 获取对应名称\r\n      try {\r\n        // 通过 user.college_id 获取学院名称\r\n        const collegeResponse = await this.$axios.get(`/api/colleges/${this.user.college_id}`);\r\n        this.user.collegeName = collegeResponse.data.name;\r\n\r\n        // 通过 user.speciality_id 获取专业名称\r\n        const specialityResponse = await this.$axios.get(`/api/specialities/${this.user.speciality_id}`);\r\n        this.user.specialityName = specialityResponse.data.name;\r\n\r\n        // 通过 user.class_id 获取班级名称\r\n        const classResponse = await this.$axios.get(`/api/classes/${this.user.class_id}`);\r\n        this.user.className = classResponse.data.name;\r\n      } catch (error) {\r\n        console.error('Error fetching names:', error);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n</style>"],"mappings":"AA6BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,QAAA;MACAC,YAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACA,MAAAD,WAAA;MACA;MACA;QACA;QACA,MAAAE,eAAA,cAAAC,MAAA,CAAAC,GAAA,uBAAAb,IAAA,CAAAc,UAAA;QACA,KAAAd,IAAA,CAAAe,WAAA,GAAAJ,eAAA,CAAAZ,IAAA,CAAAD,IAAA;;QAEA;QACA,MAAAkB,kBAAA,cAAAJ,MAAA,CAAAC,GAAA,2BAAAb,IAAA,CAAAiB,aAAA;QACA,KAAAjB,IAAA,CAAAkB,cAAA,GAAAF,kBAAA,CAAAjB,IAAA,CAAAD,IAAA;;QAEA;QACA,MAAAqB,aAAA,cAAAP,MAAA,CAAAC,GAAA,sBAAAb,IAAA,CAAAoB,QAAA;QACA,KAAApB,IAAA,CAAAqB,SAAA,GAAAF,aAAA,CAAApB,IAAA,CAAAD,IAAA;MACA,SAAAwB,KAAA;QACAC,OAAA,CAAAD,KAAA,0BAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}