{"ast":null,"code":"export default {\n  data() {\n    return {\n      notifications: [],\n      // 初始化为空数组\n      selectedNotification: null // 存储选中的通知\n    };\n  },\n  mounted() {\n    this.loadNotices(); // 组件加载时调用接口加载数据\n  },\n  methods: {\n    // 加载教务通知\n    loadNotices() {\n      this.$request.get(\"/notice/selectAll\").then(res => {\n        if (res.code === \"200\") {\n          this.notifications = res.data || []; // 将接口数据赋值给 notifications\n        } else {\n          this.$message.error(res.msg);\n        }\n      }).catch(error => {\n        this.$message.error('加载通知失败，请稍后再试。');\n        console.error(error);\n      });\n    },\n    // 查看通知详情\n    viewNotification(notification) {\n      this.selectedNotification = {\n        ...notification\n      }; // 克隆通知对象，避免修改原数据\n    },\n    // 返回到通知列表\n    backToList() {\n      this.selectedNotification = null;\n    },\n    // 格式化日期\n    formatDate(date) {\n      const d = new Date(date);\n      const year = d.getFullYear();\n      const month = String(d.getMonth() + 1).padStart(2, '0');\n      const day = String(d.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`; // 格式化为 'YYYY-MM-DD'\n    }\n  }\n};","map":{"version":3,"names":["data","notifications","selectedNotification","mounted","loadNotices","methods","$request","get","then","res","code","$message","error","msg","catch","console","viewNotification","notification","backToList","formatDate","date","d","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate"],"sources":["src/views/manager/StudentNotice.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"title\">通知公告</h1>\r\n\r\n    <!-- 通知列表 -->\r\n    <div v-if=\"!selectedNotification\" class=\"notification-list\">\r\n      <div\r\n          v-for=\"(notification, index) in notifications\"\r\n          :key=\"index\"\r\n          class=\"notification-item\"\r\n          @click=\"viewNotification(notification)\"\r\n      >\r\n        <div class=\"notification-header\">\r\n          <span class=\"notification-title\">{{ notification.title }}</span>\r\n          <span class=\"notification-date\">{{ formatDate(notification.date) }}</span>\r\n        </div>\r\n        <p class=\"notification-content\">{{ notification.content.substring(0, 50) }}...</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 完整通知信息 -->\r\n    <div v-if=\"selectedNotification\" class=\"notification-detail\">\r\n      <div class=\"detail-header\">\r\n        <button @click=\"backToList\" class=\"back-btn\">返回</button>\r\n        <h2 class=\"detail-title\">{{ selectedNotification.title }}</h2>\r\n      </div>\r\n      <p class=\"detail-content\">{{ selectedNotification.content }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      notifications: [], // 初始化为空数组\r\n      selectedNotification: null, // 存储选中的通知\r\n    };\r\n  },\r\n  mounted() {\r\n    this.loadNotices(); // 组件加载时调用接口加载数据\r\n  },\r\n  methods: {\r\n    // 加载教务通知\r\n    loadNotices() {\r\n      this.$request.get(\"/notice/selectAll\").then((res) => {\r\n        if (res.code === \"200\") {\r\n          this.notifications = res.data || []; // 将接口数据赋值给 notifications\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      }).catch(error => {\r\n        this.$message.error('加载通知失败，请稍后再试。');\r\n        console.error(error);\r\n      });\r\n    },\r\n\r\n    // 查看通知详情\r\n    viewNotification(notification) {\r\n      this.selectedNotification = { ...notification }; // 克隆通知对象，避免修改原数据\r\n    },\r\n\r\n    // 返回到通知列表\r\n    backToList() {\r\n      this.selectedNotification = null;\r\n    },\r\n\r\n    // 格式化日期\r\n    formatDate(date) {\r\n      const d = new Date(date);\r\n      const year = d.getFullYear();\r\n      const month = String(d.getMonth() + 1).padStart(2, '0');\r\n      const day = String(d.getDate()).padStart(2, '0');\r\n      return `${year}-${month}-${day}`; // 格式化为 'YYYY-MM-DD'\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  font-family: Arial, sans-serif;\r\n  padding: 20px;\r\n  background-color: #f4f4f4;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n}\r\n\r\n.notification-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.notification-item {\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  margin-bottom: 10px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n  cursor: pointer;\r\n}\r\n\r\n.notification-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.notification-title {\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.notification-date {\r\n  font-size: 0.9rem;\r\n  color: #888;\r\n}\r\n\r\n.notification-content {\r\n  font-size: 1rem;\r\n  color: #555;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.notification-detail {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.detail-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.back-btn {\r\n  padding: 8px 16px;\r\n  font-size: 1rem;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.detail-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.detail-content {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .container {\r\n    padding: 10px;\r\n  }\r\n\r\n  .notification-title {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .notification-date {\r\n    font-size: 0.8rem;\r\n  }\r\n\r\n  .notification-content {\r\n    font-size: 0.9rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAgCA;EACAA,KAAA;IACA;MACAC,aAAA;MAAA;MACAC,oBAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACA;IACAD,YAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,sBAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAT,aAAA,GAAAQ,GAAA,CAAAT,IAAA;QACA;UACA,KAAAW,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA,GAAAC,KAAA,CAAAF,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;QACAG,OAAA,CAAAH,KAAA,CAAAA,KAAA;MACA;IACA;IAEA;IACAI,iBAAAC,YAAA;MACA,KAAAf,oBAAA;QAAA,GAAAe;MAAA;IACA;IAEA;IACAC,WAAA;MACA,KAAAhB,oBAAA;IACA;IAEA;IACAiB,WAAAC,IAAA;MACA,MAAAC,CAAA,OAAAC,IAAA,CAAAF,IAAA;MACA,MAAAG,IAAA,GAAAF,CAAA,CAAAG,WAAA;MACA,MAAAC,KAAA,GAAAC,MAAA,CAAAL,CAAA,CAAAM,QAAA,QAAAC,QAAA;MACA,MAAAC,GAAA,GAAAH,MAAA,CAAAL,CAAA,CAAAS,OAAA,IAAAF,QAAA;MACA,UAAAL,IAAA,IAAAE,KAAA,IAAAI,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}