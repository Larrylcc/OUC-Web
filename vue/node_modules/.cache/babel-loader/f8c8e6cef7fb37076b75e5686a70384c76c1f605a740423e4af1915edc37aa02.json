{"ast":null,"code":"export default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      notices: [],\n      examplans: []\n    };\n  },\n  created() {\n    this.$request.get('/notice/selectAll').then(res => {\n      this.notices = res.data || [];\n    });\n    this.$request.get('/examplan/selectAll').then(res => {\n      if (res.code === '200') {\n        this.examplans = res.data || [];\n      } else {\n        this.$message.error(res.msg);\n      }\n    });\n    this.getPie();\n    this.getLine();\n  },\n  methods: {\n    getPie() {\n      this.$request.get('/attendance/getPie').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('pie');\n          let myChart = echarts.init(chartDom);\n          pieOptions.title.text = res.data.text;\n          pieOptions.title.subtext = res.data.subtext;\n          pieOptions.series.name = res.data.name;\n          pieOptions.series[0].data = res.data.data;\n          myChart.setOption(pieOptions);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    getLine() {\n      this.$request.get('/score/getLine').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('line');\n          let myChart = echarts.init(chartDom);\n          lineOptions.title.text = res.data.text;\n          lineOptions.title.subtext = res.data.subtext;\n          lineOptions.xAxis.data = res.data.xAxis;\n          lineOptions.series[0].data = res.data.yAxis;\n          myChart.setOption(lineOptions);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","notices","examplans","created","$request","get","then","res","code","$message","error","msg","getPie","getLine","methods","chartDom","document","getElementById","myChart","echarts","init","pieOptions","title","text","subtext","series","setOption","lineOptions","xAxis","yAxis"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"card\" style=\"padding: 15px\">\r\n      您好，{{ user?.name }}！欢迎使用本系统\r\n    </div>\r\n\r\n    <div style=\"display: flex; margin: 10px 0\">\r\n      <div style=\"width: 50%;\" class=\"card\">\r\n        <div style=\"margin-bottom: 30px; font-size: 20px; font-weight: bold\">教务通知</div>\r\n        <div >\r\n          <el-timeline  reverse slot=\"reference\">\r\n            <el-timeline-item v-for=\"item in notices\" :key=\"item.id\" :timestamp=\"item.time\">\r\n              <el-popover\r\n                  placement=\"right\"\r\n                  width=\"200\"\r\n                  trigger=\"hover\"\r\n                  :content=\"item.content\">\r\n                <span slot=\"reference\">{{ item.title }}</span>\r\n              </el-popover>\r\n            </el-timeline-item>\r\n          </el-timeline>\r\n        </div>\r\n      </div>\r\n\r\n      <div style=\"width: 50%;\" class=\"card\">\r\n        <div style=\"margin-bottom: 30px; font-size: 20px; font-weight: bold\">考试安排</div>\r\n        <div >\r\n          <el-timeline  reverse slot=\"reference\">\r\n            <el-timeline-item v-for=\"item in examplans\" :key=\"item.id\" :timestamp=\"item.time\">\r\n              <el-popover\r\n                  placement=\"right\"\r\n                  width=\"200\"\r\n                  trigger=\"hover\"\r\n                  :content=\"item.content\">\r\n                <span slot=\"reference\">{{ item.name }}</span>\r\n              </el-popover>\r\n            </el-timeline-item>\r\n          </el-timeline>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    <div style=\"display: flex\">\r\n      <div class=\"card\" id=\"pie\" style=\"height: 400px; width: 50%\"></div>\r\n      <div class=\"card\" id=\"line\" style=\"height: 400px; width: 50%\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Home',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      notices: [],\r\n      examplans: []\r\n    }\r\n  },\r\n  created() {\r\n    this.$request.get('/notice/selectAll').then(res => {\r\n      this.notices = res.data || []\r\n    })\r\n    this.$request.get('/examplan/selectAll').then(res => {\r\n      if (res.code === '200') {\r\n        this.examplans = res.data || []\r\n      } else {\r\n        this.$message.error(res.msg)\r\n      }\r\n    })\r\n    this.getPie()\r\n    this.getLine()\r\n  },\r\n  methods: {\r\n    getPie() {\r\n      this.$request.get('/attendance/getPie').then(res => {\r\n        if (res.code === '200') {\r\n          let chartDom = document.getElementById('pie');\r\n          let myChart = echarts.init(chartDom);\r\n\r\n          pieOptions.title.text = res.data.text\r\n          pieOptions.title.subtext = res.data.subtext\r\n          pieOptions.series.name = res.data.name\r\n          pieOptions.series[0].data = res.data.data\r\n\r\n          myChart.setOption(pieOptions);\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    getLine() {\r\n      this.$request.get('/score/getLine').then(res => {\r\n        if (res.code === '200') {\r\n          let chartDom = document.getElementById('line');\r\n          let myChart = echarts.init(chartDom);\r\n\r\n          lineOptions.title.text = res.data.text\r\n          lineOptions.title.subtext = res.data.subtext\r\n          lineOptions.xAxis.data = res.data.xAxis\r\n          lineOptions.series[0].data = res.data.yAxis\r\n\r\n          myChart.setOption(lineOptions);\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AAkDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,OAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA,CAAAC,GAAA,sBAAAC,IAAA,CAAAC,GAAA;MACA,KAAAN,OAAA,GAAAM,GAAA,CAAAZ,IAAA;IACA;IACA,KAAAS,QAAA,CAAAC,GAAA,wBAAAC,IAAA,CAAAC,GAAA;MACA,IAAAA,GAAA,CAAAC,IAAA;QACA,KAAAN,SAAA,GAAAK,GAAA,CAAAZ,IAAA;MACA;QACA,KAAAc,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;MACA;IACA;IACA,KAAAC,MAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACAF,OAAA;MACA,KAAAR,QAAA,CAAAC,GAAA,uBAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,IAAAO,QAAA,GAAAC,QAAA,CAAAC,cAAA;UACA,IAAAC,OAAA,GAAAC,OAAA,CAAAC,IAAA,CAAAL,QAAA;UAEAM,UAAA,CAAAC,KAAA,CAAAC,IAAA,GAAAhB,GAAA,CAAAZ,IAAA,CAAA4B,IAAA;UACAF,UAAA,CAAAC,KAAA,CAAAE,OAAA,GAAAjB,GAAA,CAAAZ,IAAA,CAAA6B,OAAA;UACAH,UAAA,CAAAI,MAAA,CAAA/B,IAAA,GAAAa,GAAA,CAAAZ,IAAA,CAAAD,IAAA;UACA2B,UAAA,CAAAI,MAAA,IAAA9B,IAAA,GAAAY,GAAA,CAAAZ,IAAA,CAAAA,IAAA;UAEAuB,OAAA,CAAAQ,SAAA,CAAAL,UAAA;QACA;UACA,KAAAZ,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA;IACA;IACAE,QAAA;MACA,KAAAT,QAAA,CAAAC,GAAA,mBAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,IAAAO,QAAA,GAAAC,QAAA,CAAAC,cAAA;UACA,IAAAC,OAAA,GAAAC,OAAA,CAAAC,IAAA,CAAAL,QAAA;UAEAY,WAAA,CAAAL,KAAA,CAAAC,IAAA,GAAAhB,GAAA,CAAAZ,IAAA,CAAA4B,IAAA;UACAI,WAAA,CAAAL,KAAA,CAAAE,OAAA,GAAAjB,GAAA,CAAAZ,IAAA,CAAA6B,OAAA;UACAG,WAAA,CAAAC,KAAA,CAAAjC,IAAA,GAAAY,GAAA,CAAAZ,IAAA,CAAAiC,KAAA;UACAD,WAAA,CAAAF,MAAA,IAAA9B,IAAA,GAAAY,GAAA,CAAAZ,IAAA,CAAAkC,KAAA;UAEAX,OAAA,CAAAQ,SAAA,CAAAC,WAAA;QACA;UACA,KAAAlB,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}